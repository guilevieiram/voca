{"version":3,"sources":["components/Background.tsx","assets/nav-icons/Play.svg","assets/nav-icons/Home.svg","assets/nav-icons/Add.svg","assets/nav-icons/Points.svg","assets/nav-logo.svg","components/Nav.tsx","components/user_login/RedirectToSignup.tsx","models/LoginUser.ts","models/TestBackend.ts","models/GetSupportedLanguages.ts","models/SignupUser.ts","models/AddWords.ts","models/GetWords.ts","models/GetScore.ts","models/GetUser.ts","models/UpdateUser.ts","models/DeleteWord.ts","components/Loader.tsx","components/user_login/LoginForm.tsx","components/user_login/GoToHome.tsx","components/user_login/index.ts","components/user_login/UserLogin.tsx","components/user_signup/SignupForm.tsx","components/user_signup/RedirectToLogin.tsx","components/user_signup/index.ts","components/user_signup/UserSignup.tsx","components/add_words/AddWordsBar.tsx","components/add_words/SaveButton.tsx","components/add_words/WordsList.tsx","components/add_words/index.ts","components/add_words/AddWordsPage.tsx","components/play_page/ShowTargetWord.tsx","components/play_page/TranslateField.tsx","components/play_page/Score.tsx","components/play_page/NextButton.tsx","components/play_page/LoadMore.tsx","components/play_page/ReloadWords.tsx","components/play_page/PlayPage.tsx","components/play_page/index.ts","components/config_page/DarkModeConfig.tsx","components/NotFoundPage.tsx","components/config_page/index.ts","components/config_page/ConfigPage.tsx","components/user_page/EditableLine.tsx","components/user_page/EditableImage.tsx","components/user_page/Disconnect.tsx","components/user_page/index.ts","components/user_page/UserPage.tsx","components/home_page/ExplanatoryText.tsx","components/home_page/Tutorial.tsx","components/home_page/Feedback.tsx","components/home_page/GoToLogin.tsx","assets/voca-logo-light.svg","assets/voca-logo-dark.svg","components/home_page/index.ts","components/home_page/HomePage.tsx","App.tsx","models/Theme.ts","reportWebVitals.ts","index.tsx","app.config.js"],"names":["Background","className","style","zIndex","Button","active","icon","link","to","src","alt","NavLogoButton","Nav","addIcon","homeIcon","navLogo","playIcon","pointsIcon","RedirectToSignup","UserLoginRequestState","url","a","endpoint","parameters","headers","method","fetch","then","data","json","response","console","log","catch","e","setLanguages","setSuccess","code","languages","window","alert","UserSignupRequestState","AddWordsRequestState","GetWordsRequestState","GetScoreRequestState","GetUserRequestState","UpdateUserRequestState","DeleteWordRequestState","Loader","borderBottomColor","LoginForm","setToken","useState","email","setEmail","password","setPassword","NotStarted","requestState","setRequestState","useEffect","BackendIssue","Successful","location","reload","action","onSubmit","event","preventDefault","setLoginState","user_email","body","JSON","stringify","Waiting","id","WrongPassword","UserNotFound","loginUser","apiEndpoint","type","name","placeholder","required","onChange","target","value","GoToHome","UserLogin","LanguageSelectComponent","setLanguage","languagesGetSuccess","setLanguagesGetSuccess","flag","getSupportedLanguages","map","element","index","title","SignupForm","setName","passwordCheck","setPasswordCheck","matchPassword","setMatchPassword","language","navigate","useNavigate","undefined","setSignupState","user_name","user_password","user_language","user_photo","EmailInUse","signupUser","RedirectToLogin","UserSignup","AddWordsBar","addWord","word","setWord","autoComplete","onClick","document","querySelector","SaveButton","saveWords","WordLine","remove","size","WordsList","words","removeWord","slice","reverse","AddWordsPage","userId","storedWords","sessionStorage","getItem","parse","getWordsFromSessionStorage","setWords","setItem","removeItem","includes","filter","item","length","wordsList","user_id","addWords","ShowTargetWord","deleteWord","TranslateField","setScore","wordId","wordIndex","translatedWord","setTranslatedWord","TranslationError","NlpError","word_id","score","getScore","Score","toFixed","NextButton","nextWord","show","LoadMore","loadMoreWords","ReloadWords","reloadWords","setWordsListInSessionStorage","PlayPage","ThemeOptions","wordListString","readWordsListFromSessionStorage","setWordsList","readWordIndexFromSessionStorage","targetWordIndex","setTargetWordIndex","targetWord","setTargetWord","finished","setFinished","getWordsRequestState","setGetWordsRequestState","deleteWordRequestState","setDeleteWordsRequestState","loadWords","getWords","WordNotFound","NotFoundPage","DarkModeConfig","defaultValue","localStorage","theme","dark","light","systemDefault","valueOf","ConfigPage","EditableLine","apiKey","label","inputType","changeFunction","enableEdit","setEnableEdit","field","setField","String","toLowerCase","match","disabled","EditableImage","Disconnect","clear","UserPage","photo","user","setUser","getUserRequestState","setGetUserRequestState","updateUserRequestState","setUpdateUserRequestState","updateUserData","key","property","updateUser","photo_url","getUser","ExplanatoryText","Tutorial","expand","setExpand","Feedback","href","GoToLogin","HomePage","vocaLogoLight","vocaLogoDark","App","token","ifLoggedIn","replace","ifNotLoggedIn","setUserId","parseInt","wakeBackend","matchMedia","matches","documentElement","classList","add","path","userToken","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById","module","exports"],"mappings":"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","file":"static/js/main.657921cd.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport default function Background ():React.ReactElement{\r\n    return(\r\n        <div className={`bg-light dark:bg-dark h-screen w-screen fixed top-0 left-0`}\r\n            style={{zIndex:-10}}\r\n        ></div>\r\n    )\r\n};","export default __webpack_public_path__ + \"static/media/Play.aece485a.svg\";","export default __webpack_public_path__ + \"static/media/Home.f391c814.svg\";","export default __webpack_public_path__ + \"static/media/Add.fbd4f9bf.svg\";","export default __webpack_public_path__ + \"static/media/Points.023137a0.svg\";","export default __webpack_public_path__ + \"static/media/nav-logo.126134b2.svg\";","// I'm still not sure how to do the purple icons idea work without changing the workings of the routing managemenet system.\r\n\r\nimport playIcon from '../assets/nav-icons/Play.svg';\r\n// import playIconPurple from '../assets/nav-icons/Play-purple.svg';\r\nimport homeIcon from '../assets/nav-icons/Home.svg';\r\n// import homeIconPurple from '../assets/nav-icons/Home-purple.svg';\r\nimport addIcon from '../assets/nav-icons/Add.svg';\r\n// import addIconPurple from '../assets/nav-icons/Add-purple.svg';\r\nimport pointsIcon from '../assets/nav-icons/Points.svg';\r\n// import pointsIconPurple from '../assets/nav-icons/Points-purple.svg';\r\n\r\nimport navLogo from '../assets/nav-logo.svg';\r\nimport React from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\ntype ButtonProps = {\r\n    active: boolean,\r\n    icon: string,\r\n    link: string\r\n};\r\n\r\ntype NavLogoButtonProps = {\r\n    icon: string,\r\n    link: string\r\n};\r\n\r\nfunction Button ({active, icon, link}: ButtonProps): React.ReactElement {\r\n    return (\r\n        <div  className={\r\n            active ?\r\n            `h-full z-10 flex justify-center items-end fill-purple`:\r\n            `h-full z-10 flex justify-center items-end fill-dark`\r\n        }>\r\n            <Link to={link}>\r\n                <img src={icon} alt={icon} className={`h-10 p-3 bottom-0 filter drop-shadow-lg`}/>\r\n            </Link>\r\n        </div>\r\n    )\r\n};\r\n\r\nfunction NavLogoButton ({icon, link}: NavLogoButtonProps):React.ReactElement {\r\n    return (\r\n        <div className={`h-full`}>\r\n            <Link to={link}>\r\n                <img src={icon} alt={icon} className={`h-16 p-1 filter drop-shadow-lg`}/>\r\n            </Link>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default function Nav (): React.ReactElement {\r\n\r\n    return (\r\n        <div className={`fixed bottom-0 left-0 w-screen  h-16 flex justify-center items-center`}>\r\n            <div className={`w-screen h-10 absolute bottom-0 left-0 bg-blue`}></div>\r\n            <div className={`max-w-2xl w-full h-full px-4 z-10 flex justify-around items-center`}>\r\n                <Button active={false} icon={addIcon} link='/add_words' />\r\n                <Button active={false} icon={homeIcon} link='/user_page' />\r\n                <NavLogoButton icon={navLogo} link='/home' />\r\n                <Button active={false} icon={playIcon} link='/play' />\r\n                <Button active={false} icon={pointsIcon} link='/config' />\r\n            </div>\r\n        </div>\r\n    )\r\n};","import {Link} from 'react-router-dom';\r\n\r\nexport default function RedirectToSignup (): React.ReactElement {\r\n    return(\r\n        <div className=\"w-full mb-32\" >\r\n            <p className={`text-blue py-2`}>Don't have an account?</p>\r\n            <Link to=\"/signup\">\r\n                <button className={`primary-button`}>Sign Up!</button>\r\n            </Link>\r\n        </div>\r\n    )\r\n};","enum UserLoginRequestState {\r\n    NotStarted,\r\n    Started,\r\n    Waiting,\r\n    Successful,\r\n    WrongPassword,\r\n    UserNotFound,\r\n    BackendIssue\r\n};\r\n\r\ntype setTokenType = (id: string) => void;\r\ntype setLoginStateType = (loginState: UserLoginRequestState) => void;\r\n\r\nconst loginUser = (email: string, password: string, setToken: setTokenType, setLoginState: setLoginStateType, url: string) => {\r\n    const endpoint: string = `${url}user/login`;\r\n    const data = {\r\n        user_email: email,\r\n        password: password\r\n    };\r\n    const parameters = {\r\n        headers: {\r\n            \"Content-Type\": \"application/json\"\r\n        },\r\n        body: JSON.stringify(data),\r\n        method: \"POST\"\r\n    };\r\n\r\n    setLoginState(UserLoginRequestState.Waiting);\r\n    fetch(endpoint, parameters)\r\n    .then( (data) => {\r\n        return data.json();\r\n    })\r\n    .then( (response) => {\r\n        console.log(response)\r\n        switch(response.code){\r\n            case 1:{\r\n                setLoginState(UserLoginRequestState.Successful);\r\n                setToken(response.id);\r\n                break;\r\n            }\r\n            case -2:{\r\n                setLoginState(UserLoginRequestState.WrongPassword);\r\n                break;\r\n            }\r\n            case -1:{\r\n                setLoginState(UserLoginRequestState.UserNotFound);\r\n                break;\r\n            }\r\n            default:{\r\n                setLoginState(UserLoginRequestState.BackendIssue);\r\n                break;\r\n            }\r\n        }\r\n    })\r\n    .catch( e => {\r\n        setLoginState(UserLoginRequestState.BackendIssue);\r\n        console.log(e);\r\n    });\r\n};\r\n\r\nexport {\r\n    UserLoginRequestState,\r\n    loginUser\r\n};","export default async function wakeBackend (url: string) {\r\n    const endpoint: string = url;\r\n    const parameters: any = {\r\n        headers: {\r\n            \"Content-Type\": \"application/json\"\r\n        },\r\n        method: \"GET\"\r\n    }\r\n    await fetch(endpoint, parameters)\r\n    .then(data => data.json())\r\n    .then(response => {\r\n        console.log(response);\r\n    })\r\n    .catch(e => {console.log(e)})\r\n}","type Language = {\r\n    name: string,\r\n    flag: string,\r\n    code: string\r\n}\r\ntype setLanguagesType = (languages: Language[]) => void;\r\ntype setSuccessType = (state: boolean) => void;\r\n\r\nasync function getSupportedLanguages(url: string, setLanguages: setLanguagesType, setSuccess: setSuccessType ) {\r\n\r\n    const endpoint: string = `${url}language/supported_languages`;\r\n    const parameters: any = {\r\n        headers: {\r\n            \"Content-Type\": \"application/json\"\r\n        },\r\n        method: \"GET\"\r\n    }\r\n\r\n    await fetch(endpoint, parameters)\r\n    .then(data => data.json())\r\n    .then(response => {\r\n        switch (response.code){\r\n            case 1:{\r\n                setLanguages(response.languages);\r\n                setSuccess(true);\r\n                break;\r\n            }\r\n            default:{\r\n                window.alert(\"Looks like our servers are down for the moment... Try again later!\");\r\n                setSuccess(false);\r\n                break;\r\n            }\r\n        }\r\n    })\r\n    .catch(e => {\r\n        console.log(e);\r\n        setSuccess(false);\r\n    })\r\n}\r\n\r\nexport {\r\n    getSupportedLanguages\r\n};\r\nexport type { Language };\r\n","enum UserSignupRequestState {\r\n    NotStarted,\r\n    Started,\r\n    Waiting,\r\n    Successful,\r\n    EmailInUse,\r\n    BackendIssue\r\n};\r\n\r\ntype setSignupStateType = (signupState: UserSignupRequestState) => void;\r\n\r\nconst signupUser = (name: string, email: string, password: string, language: string, setSignupState: setSignupStateType, url: string) => {\r\n    const endpoint: string = `${url}/user/signup`;\r\n    const data = {\r\n        user_name: name,\r\n        user_email: email,\r\n        user_password: password,\r\n        user_language: language,\r\n        user_photo: `https://avatars.dicebear.com/api/croodles-neutral/${email}.svg`\r\n    };\r\n    const parameters = {\r\n        headers: {\r\n            \"Content-Type\": \"application/json\"\r\n        },\r\n        body: JSON.stringify(data),\r\n        method: \"POST\"\r\n    };\r\n\r\n    setSignupState(UserSignupRequestState.Waiting);\r\n    fetch(endpoint, parameters)\r\n    .then( (data) => {\r\n        return data.json();\r\n    })\r\n    .then( (response) => {\r\n        console.log(response);\r\n        switch(response.code){\r\n            case 1:{\r\n                setSignupState(UserSignupRequestState.Successful);\r\n                break;\r\n            }\r\n            case -6:{\r\n                setSignupState(UserSignupRequestState.EmailInUse);\r\n                break;\r\n            }\r\n            default:{\r\n                setSignupState(UserSignupRequestState.BackendIssue);\r\n                console.log(\"user signup request, default case\");\r\n                break;\r\n            }\r\n        }\r\n    })\r\n    .catch( e => {\r\n        setSignupState(UserSignupRequestState.BackendIssue);\r\n        console.log(e);\r\n    });\r\n};\r\n\r\nexport {\r\n    UserSignupRequestState,\r\n    signupUser\r\n}","enum AddWordsRequestState {\r\n    NotStarted,\r\n    Started,\r\n    Waiting,\r\n    Successful,\r\n    UserNotFound, \r\n    BackendIssue\r\n};\r\n\r\ntype setRequestStateType = (requestState: AddWordsRequestState) => void;\r\n\r\nfunction addWords(userId: number | null, wordsList: string[], setRequestState: setRequestStateType, url: string): void {\r\n    const endpoint = `${url}language/add_words`;\r\n    const data = {\r\n        user_id: userId,\r\n        words: wordsList\r\n    };\r\n    const parameters = {\r\n        headers: {\r\n            \"Content-Type\": \"application/json\"\r\n        },\r\n        body: JSON.stringify(data),\r\n        method: \"POST\"\r\n    };\r\n\r\n    setRequestState(AddWordsRequestState.Waiting)\r\n    fetch(endpoint, parameters)\r\n    .then( (data) => {\r\n        return data.json();\r\n    })\r\n    .then( (response) => {\r\n        console.log(response);\r\n        switch(response.code){\r\n            case 1:{\r\n                setRequestState(AddWordsRequestState.Successful);\r\n                break;\r\n            }\r\n            case -5:{\r\n                setRequestState(AddWordsRequestState.UserNotFound);\r\n                break;\r\n            }\r\n            default:{\r\n                setRequestState(AddWordsRequestState.BackendIssue);\r\n                break;\r\n            }\r\n        }\r\n    })\r\n    .catch( e => {\r\n        setRequestState(AddWordsRequestState.BackendIssue);\r\n        console.log(e);\r\n    });\r\n};\r\n\r\nexport {\r\n    addWords,\r\n    AddWordsRequestState\r\n}","enum GetWordsRequestState{\r\n    NotStarted,\r\n    Started,\r\n    Waiting,\r\n    Successful,\r\n    UserNotFound, \r\n    BackendIssue\r\n};\r\n\r\ntype Word = {\r\n    word: string,\r\n    id: number \r\n};\r\ntype setRequestStateType = (requestState: GetWordsRequestState) => void;\r\ntype setWordsType = (words: Word[]) => void;\r\n\r\nfunction getWords (userId: number | null, setWords: setWordsType, setRequestState: setRequestStateType, url: string): void {\r\n    const endpoint = `${url}language/get_words`;\r\n    const data = {\r\n        user_id: userId,\r\n    };\r\n    const parameters = {\r\n        headers: {\r\n            \"Content-Type\": \"application/json\"\r\n        },\r\n        body: JSON.stringify(data),\r\n        method: \"POST\"\r\n    };\r\n\r\n    setRequestState(GetWordsRequestState.Waiting)\r\n    fetch(endpoint, parameters)\r\n    .then( (data) => {\r\n        return data.json();\r\n    })\r\n    .then( (response) => {\r\n        console.log(response);\r\n        switch(response.code){\r\n            case 1:{\r\n                setRequestState(GetWordsRequestState.Successful);\r\n                setWords(response.words);\r\n                break;\r\n            }\r\n            case -5:{\r\n                setRequestState(GetWordsRequestState.UserNotFound);\r\n                break;\r\n            }\r\n            default:{\r\n                setRequestState(GetWordsRequestState.BackendIssue);\r\n                break;\r\n            }\r\n        }\r\n    })\r\n    .catch( e => {\r\n        setRequestState(GetWordsRequestState.BackendIssue);\r\n        console.log(e);\r\n    });\r\n};\r\n\r\nexport {\r\n    GetWordsRequestState,\r\n    getWords\r\n};\r\nexport type { Word };\r\n","enum GetScoreRequestState{\r\n    NotStarted,\r\n    Started,\r\n    Waiting,\r\n    Successful,\r\n    UserNotFound,\r\n    BackendIssue,\r\n    // still don't know if we should give user this level of detail\r\n    TranslationError,\r\n    NlpError\r\n};\r\n\r\ntype setRequestStateType = (requestState: GetScoreRequestState) => void;\r\ntype setScoreType = (setScore: number) => void;\r\n\r\nfunction getScore (wordId: number, word: string, setScore: setScoreType, setRequestState: setRequestStateType, url: string): void {\r\n    const endpoint = `${url}language/score`;\r\n    const data = {\r\n        word_id: wordId,\r\n        word: word\r\n    };\r\n    const parameters = {\r\n        headers: {\r\n            \"Content-Type\": \"application/json\"\r\n        },\r\n        body: JSON.stringify(data),\r\n        method: \"POST\"\r\n    };\r\n\r\n    setRequestState(GetScoreRequestState.Waiting)\r\n    fetch(endpoint, parameters)\r\n    .then( (data) => {\r\n        return data.json();\r\n    })\r\n    .then( (response) => {\r\n        console.log(response);\r\n        switch(response.code){\r\n            case 1:{\r\n                setRequestState(GetScoreRequestState.Successful);\r\n                setScore(response.score);\r\n                break;\r\n            }\r\n            case -5:{\r\n                setRequestState(GetScoreRequestState.UserNotFound);\r\n                break;\r\n            }\r\n            case -9: case -10: case -14: {\r\n                setRequestState(GetScoreRequestState.TranslationError);\r\n                break;\r\n            }\r\n            case -11: {\r\n                setRequestState(GetScoreRequestState.NlpError);\r\n                break;\r\n            }\r\n            default:{\r\n                setRequestState(GetScoreRequestState.BackendIssue);\r\n                break;\r\n            }\r\n        }\r\n    })\r\n    .catch( e => {\r\n        setRequestState(GetScoreRequestState.BackendIssue);\r\n        console.log(e);\r\n    });\r\n};\r\n\r\nexport {\r\n    GetScoreRequestState,\r\n    getScore \r\n}","enum GetUserRequestState{\r\n    NotStarted,\r\n    Started,\r\n    Waiting,\r\n    Successful,\r\n    UserNotFound,\r\n    BackendIssue,\r\n};\r\n\r\ntype setRequestStateType = (requestState: GetUserRequestState) => void;\r\ntype User = {\r\n    email: string,\r\n    name: string,\r\n    photo: string\r\n};\r\ntype setUserType = (user: User) => void;\r\n\r\nfunction getUser (userId: number | null, setUser: setUserType, setRequestState: setRequestStateType, url: string): void {\r\n    const endpoint = `${url}user/get`;\r\n    const data = {\r\n        user_id: userId\r\n    };\r\n    const parameters = {\r\n        headers: {\r\n            \"Content-Type\": \"application/json\"\r\n        },\r\n        body: JSON.stringify(data),\r\n        method: \"POST\"\r\n    };\r\n\r\n    setRequestState(GetUserRequestState.Waiting)\r\n    fetch(endpoint, parameters)\r\n    .then( (data) => {\r\n        return data.json();\r\n    })\r\n    .then( (response) => {\r\n        console.log(response);\r\n        switch(response.code){\r\n            case 1:{\r\n                setRequestState(GetUserRequestState.Successful);\r\n                const {name, email, photo_url}= response.user;\r\n                setUser({\r\n                    name: name,\r\n                    email: email,\r\n                    photo: photo_url\r\n                });\r\n                break;\r\n            }\r\n            case -5:{\r\n                setRequestState(GetUserRequestState.UserNotFound);\r\n                break;\r\n            }\r\n            default:{\r\n                setRequestState(GetUserRequestState.BackendIssue);\r\n                break;\r\n            }\r\n        }\r\n    })\r\n    .catch( e => {\r\n        setRequestState(GetUserRequestState.BackendIssue);\r\n        console.log(e);\r\n    });\r\n};\r\n\r\nexport {\r\n    GetUserRequestState,\r\n    getUser\r\n};","enum UpdateUserRequestState{\r\n    NotStarted,\r\n    Started,\r\n    Waiting,\r\n    Successful,\r\n    UserNotFound,\r\n    BackendIssue,\r\n    ValueNotValid\r\n};\r\n\r\ntype setRequestStateType = (requestState: UpdateUserRequestState) => void;\r\n\r\nfunction updateUser (userId: number | null, property: string, value: string, setRequestState: setRequestStateType, url: string): void {\r\n    const endpoint = `${url}user/update`;\r\n    const data = {\r\n        user_id: userId,\r\n        property: property,\r\n        value: value\r\n    };\r\n    const parameters = {\r\n        headers: {\r\n            \"Content-Type\": \"application/json\"\r\n        },\r\n        body: JSON.stringify(data),\r\n        method: \"POST\"\r\n    };\r\n\r\n    setRequestState(UpdateUserRequestState.Waiting)\r\n    fetch(endpoint, parameters)\r\n    .then( (data) => {\r\n        return data.json();\r\n    })\r\n    .then( (response) => {\r\n        console.log(response);\r\n        switch(response.code){\r\n            case 1:{\r\n                setRequestState(UpdateUserRequestState.Successful);\r\n                break;\r\n            }\r\n            case -5:{\r\n                setRequestState(UpdateUserRequestState.UserNotFound);\r\n                break;\r\n            }\r\n            default:{\r\n                setRequestState(UpdateUserRequestState.BackendIssue);\r\n                break;\r\n            }\r\n        }\r\n    })\r\n    .catch( e => {\r\n        setRequestState(UpdateUserRequestState.BackendIssue);\r\n        console.log(e);\r\n    });\r\n};\r\n\r\nexport {\r\n    UpdateUserRequestState,\r\n    updateUser \r\n}","enum DeleteWordRequestState {\r\n    NotStarted,\r\n    Started,\r\n    Waiting,\r\n    Successful,\r\n    WordNotFound,\r\n    BackendIssue\r\n};\r\n\r\ntype setRequestStateType = (requestState: DeleteWordRequestState) => void;\r\n\r\nfunction deleteWord(wordId: number, setRequestState: setRequestStateType, url: string ): void {\r\n    const endpoint = `${url}language/inactivate_word`;\r\n    const data = {\r\n        word_id: wordId\r\n    };\r\n    const parameters = {\r\n        headers: {\r\n            \"Content-Type\": \"application/json\"\r\n        },\r\n        body: JSON.stringify(data),\r\n        method: \"POST\"\r\n    };\r\n\r\n    setRequestState(DeleteWordRequestState.Waiting);\r\n    fetch(endpoint, parameters)\r\n    .then( data => data.json())\r\n    .then( response => {\r\n        console.log(response);\r\n        switch(response.code){\r\n            case 1: {\r\n                setRequestState(DeleteWordRequestState.Successful);\r\n                break;\r\n            }\r\n            case -8: {\r\n                setRequestState(DeleteWordRequestState.WordNotFound);\r\n                break;\r\n            }\r\n            default:{\r\n                setRequestState(DeleteWordRequestState.BackendIssue);\r\n                break;\r\n            }\r\n        }\r\n    })\r\n    .catch( e => {\r\n        setRequestState(DeleteWordRequestState.BackendIssue);\r\n        console.log(e);\r\n    });\r\n};\r\n\r\nexport{\r\n    DeleteWordRequestState,\r\n    deleteWord\r\n}","export default function Loader(): React.ReactElement {\r\n    return (\r\n        <div className=\"w-full flex justify-center items-center my-6\">\r\n            <div style={{borderBottomColor: \"transparent\"}} className=\"h-10 w-10  border-2 rounded-full  border-blue animate-spin\"></div>\r\n        </div>\r\n    )\r\n}","import { useEffect, useState } from \"react\";\r\nimport { loginUser, UserLoginRequestState } from \"../../models\";\r\nimport Loader from  '../Loader';\r\nimport { apiEndpoint } from '../../app.config';\r\n\r\ntype LoginFormProps = {\r\n    setToken: (token: string) => void\r\n};\r\n\r\n\r\nexport default function LoginForm ({setToken}: LoginFormProps): React.ReactElement {\r\n    const [email, setEmail] = useState<string>(\"\");\r\n    const [password, setPassword] = useState<string>(\"\");\r\n    const [requestState, setRequestState] = useState<UserLoginRequestState>(UserLoginRequestState.NotStarted);\r\n\r\n    const changeEmail = (event: any) => setEmail(event.target.value);\r\n    const changePassword = (event: any) => setPassword(event.target.value);\r\n    const onSubmit = (event: any) => {\r\n        event.preventDefault();\r\n        loginUser(email, password, setToken, setRequestState, apiEndpoint);\r\n    };\r\n\r\n    useEffect(() => {\r\n        if(requestState === UserLoginRequestState.BackendIssue) window.alert(\"It seems like our servers are down at the moment ... \\n Try again in a few minutes!\");\r\n        else if (requestState === UserLoginRequestState.Successful) window.location.reload();\r\n    }, [requestState]);\r\n\r\n    return(\r\n        <form action=\"#\" onSubmit={onSubmit} className={`flex flex-col my-10 text-dark dark:text-light`}>\r\n            <input type=\"email\" name=\"E-mail\" id=\"email\" placeholder=\"Email\" required className={requestState === UserLoginRequestState.UserNotFound ? 'input-field border-red bg-light dark:bg-dark' : 'input-field bg-light dark:bg-dark'} onChange={changeEmail}/>\r\n            {\r\n                requestState === UserLoginRequestState.UserNotFound ?\r\n                <p className=\"text-sm text-red\">This user does not exists.</p> : <></>\r\n            }\r\n            <input type=\"password\" name=\"Password\" id=\"password\" placeholder=\"Password\" required className={requestState === UserLoginRequestState.WrongPassword ? 'border-red input-field bg-light dark:bg-dark' : 'input-field bg-light dark:bg-dark'} onChange={changePassword}/>\r\n            {\r\n                requestState === UserLoginRequestState.WrongPassword ?\r\n                <p className=\"text-sm text-red\">Wrong password.</p> : <></>\r\n            }\r\n            {\r\n                requestState === UserLoginRequestState.Waiting ?\r\n                <Loader /> : <input type=\"submit\" value=\"Log in\" className={`secondary-button bg-light dark:bg-dark`} />\r\n            }\r\n            {/* <a href=\"https://google.com\" className={`text-blue underline text-right`}>  Forgot password?</a> */}\r\n        </form>\r\n    )\r\n};","import {Link} from \"react-router-dom\";\r\ntype GoToHomeProps = {}\r\nexport default function GoToHome({}: GoToHomeProps): React.ReactElement {\r\n    return (\r\n        <div className=\"mb-10\">\r\n            <h2 className=\" text-lg\">Want to know more?</h2>\r\n            <Link to=\"/home\" \r\n                className=\" text-blue hover:text-dark dark:hover:text-light \"\r\n            >\r\n                Check out our home page!\r\n            </Link>\r\n\r\n        </div>\r\n    )\r\n}","import UserLogin from \"./UserLogin\";\r\nexport default UserLogin;","import React from \"react\";\r\nimport RedirectToSignup from './RedirectToSignup';\r\nimport LoginForm from './LoginForm';\r\nimport GoToHome from './GoToHome';\r\n\r\ntype UserLoginProps = {\r\n    setToken: (token: string) => void\r\n};\r\n\r\nexport default function UserLogin ({setToken}: UserLoginProps): React.ReactElement {\r\n    return(\r\n       <div className={`w-full h-screen py-10`}>\r\n            <h1 className={`page-title text-dark dark:text-light`}>Login</h1>\r\n            <div className=\"flex flex-col justify-between h-full \">\r\n                <LoginForm setToken={setToken}/>\r\n                <GoToHome />\r\n                <RedirectToSignup />\r\n            </div>\r\n       </div> \r\n    )\r\n};","import { useEffect, useState } from \"react\";\r\nimport { signupUser, UserSignupRequestState, getSupportedLanguages, Language} from '../../models';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { apiEndpoint } from \"../../app.config\";\r\nimport Loader from \"../Loader\";\r\n\r\ntype LanguageSelectComponentProps = {\r\n    setLanguage: (language: string) => void,\r\n    languagesGetSuccess: boolean | null,\r\n    setLanguagesGetSuccess : (state: boolean) => void\r\n};\r\n\r\nfunction LanguageSelectComponent ({setLanguage, languagesGetSuccess, setLanguagesGetSuccess}: LanguageSelectComponentProps): React.ReactElement {\r\n    const [languages, setLanguages] = useState<Language[]>([{\r\n        name: \"\",\r\n        flag: \"\",\r\n        code: \"\"\r\n    }]);\r\n\r\n    const onChange = (event: any): void => setLanguage(event.target.value);\r\n    useEffect((): void => {\r\n        setLanguage(languages[0].code);\r\n        getSupportedLanguages(apiEndpoint, setLanguages, setLanguagesGetSuccess);\r\n    } , []);\r\n\r\n    if(languagesGetSuccess !== true) return <></>\r\n\r\n    return (\r\n        <div className={`w-full flex justify-between items-center my-4`}>\r\n            <p>Language:</p>\r\n            <select className={`bg-light dark:bg-dark`} onChange={onChange}>\r\n                {languages.map((element, index) => <option title={element.name} value={element.code} key={index} className={`bg-light dark:bg-dark`}>{element.flag}</option>)}\r\n            </select>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default function SignupForm (): React.ReactElement {\r\n    const [name, setName] = useState<string>(\"\");\r\n    const [email, setEmail] = useState<string>(\"\");\r\n    const [password, setPassword] = useState<string>(\"\");\r\n    const [passwordCheck, setPasswordCheck] = useState<string>(\"\");\r\n    const [matchPassword, setMatchPassword] = useState<boolean|null>(null);\r\n    const [language, setLanguage] = useState<string>(\"\");\r\n    const [requestState, setRequestState] = useState<UserSignupRequestState>(UserSignupRequestState.NotStarted);\r\n    const [languagesGetSuccess, setLanguagesGetSuccess] = useState<boolean|null>(null);\r\n\r\n    const navigate = useNavigate();\r\n    const onSubmit = (event: any): void => {\r\n        event.preventDefault();\r\n        if(!matchPassword) return;\r\n        signupUser(name, email, password, language, setRequestState, apiEndpoint)\r\n    };\r\n\r\n    useEffect(():void => password && passwordCheck ? setMatchPassword(password === passwordCheck) : undefined , [password, passwordCheck]);\r\n    useEffect(():void => {\r\n        if(requestState === UserSignupRequestState.BackendIssue) window.alert(\"It seems like our servers are down at the moment ... \\n Try again in a few minutes!\");\r\n        else if (requestState === UserSignupRequestState.Successful ) {\r\n            window.alert(\"Signup successful!\");\r\n            navigate(\"/login\");\r\n        };\r\n    }, [requestState]);\r\n    useEffect((): void => {\r\n        console.log(languagesGetSuccess)\r\n        if(languagesGetSuccess === false) window.alert(\"It seems like our servers are down at the moment ...\")\r\n    }, [languagesGetSuccess])\r\n\r\n    return(\r\n        <form action=\"#\" onSubmit={onSubmit} className={`flex flex-col my-10 text-dark dark:text-light`}>\r\n            <input required onChange={(event: any):void => setName(event.target.value)} type=\"text\" name=\"Name\" id=\"Name\" placeholder=\"Name\" className={`input-field bg-light dark:bg-dark `}/>\r\n            <input required onChange={(event: any):void => setEmail(event.target.value)} type=\"email\" name=\"E-mail\" id=\"email\" placeholder=\"Email\" className={requestState === UserSignupRequestState.EmailInUse ? 'input-field bg-light dark:bg-dark border-red' : 'input-field bg-light dark:bg-dark'}/>\r\n            {\r\n                requestState === UserSignupRequestState.EmailInUse ?\r\n                <p className=\"text-sm text-red p-0\">This email is already in use.</p> : <></>\r\n            }\r\n            <input required onChange={(event: any):void => setPassword(event.target.value)} type=\"password\" name=\"Password\" id=\"password\" placeholder=\"Password\" className={`input-field bg-light dark:bg-dark`}/>\r\n            <input required onChange={(event: any):void => setPasswordCheck(event.target.value)} type=\"password\" name=\"Password-2\" id=\"password-2\" placeholder=\"Confirm password\" className={matchPassword === false ? \"input-field bg-light dark:bg-dark border-red\" : \"input-field bg-light dark:bg-dark\"}/>\r\n            {\r\n                matchPassword === false ?\r\n                <p className=\"text-sm text-red p-0\">Please make sure the passwords are the same.</p> : <></>\r\n            }\r\n            <LanguageSelectComponent setLanguage={setLanguage} languagesGetSuccess={languagesGetSuccess} setLanguagesGetSuccess={setLanguagesGetSuccess}/> \r\n            {\r\n                requestState === UserSignupRequestState.Waiting ?\r\n                <Loader/> :\r\n                <input type=\"submit\" value=\"Sign up\" className={`primary-button my-4`} />\r\n            }\r\n        </form>\r\n    )\r\n};","import {Link} from 'react-router-dom';\r\n\r\nexport default function RedirectToLogin(): React.ReactElement {\r\n    return (\r\n        <div>\r\n            <p className={`text-sm text-dark dark:text-light`}>Already have an account?</p>\r\n            <Link to=\"/login\">\r\n                <button className={`secondary-button bg-light dark:bg-dark`}>Log in!</button>\r\n            </Link>\r\n        </div>\r\n    )\r\n};","import UserSignup from \"./UserSignup\";\r\nexport default UserSignup;","import SignupForm from './SignupForm';\r\nimport RedirectToLogin from './RedirectToLogin';\r\n\r\nexport default function UserSignup (): React.ReactElement {\r\n    return (\r\n        <div className={`w-full py-10`}>\r\n            <h1 className={`page-title text-dark dark:text-light`}>Sign up!</h1>\r\n            <SignupForm />\r\n            <RedirectToLogin /> \r\n        </div>\r\n    )\r\n};","import { useState } from \"react\";\r\n\r\ntype AddWordsBarProps = {\r\n    addWord: (word: string) => void\r\n};\r\n\r\nexport default function AddWordsBar ({ addWord }: AddWordsBarProps ): React.ReactElement {\r\n    const [word, setWord] = useState<string>(\"\");\r\n    const changeWord = (event: any): void => setWord(event.target.value);\r\n    const clearInput = (): void => {\r\n        const inputField: any = document.querySelector(\"#add-word-input\");\r\n        inputField.value = \"\";\r\n    };\r\n    const sumbitWord = (event: any): void => {\r\n        event.preventDefault();\r\n        addWord(word);\r\n        clearInput();\r\n    };\r\n    return(\r\n        <div className=\"my-2 w-full\">\r\n            <form className=\"flex items-center w-full\" autoComplete=\"off\" >\r\n                <input id=\"add-word-input\" type=\"text\" placeholder=\"Add words\" className=\"input-field w-full mr-4\" onChange={changeWord}/>\r\n                <button onClick={sumbitWord} className=\"rounded-button px-2 text-lg \">+</button>\r\n            </form>\r\n        </div>\r\n    )\r\n}","import React from \"react\"\r\n\r\ntype SaveButtonProps = {\r\n    saveWords: () => void\r\n}\r\n\r\nexport default function SaveButton ({ saveWords }: SaveButtonProps): React.ReactElement {\r\n    return <button className=\"primary-button px-10 py-3\" onClick={saveWords}>Save</button>\r\n}","import {BiTrashAlt} from 'react-icons/bi';\r\n\r\ntype WordsListProps = {\r\n    words: string[],\r\n    removeWord: (word: string) => void\r\n};\r\ntype WordLineProps = {\r\n    word: string,\r\n    remove: () => void\r\n};\r\n\r\nfunction WordLine ({ word, remove }: WordLineProps): React.ReactElement {\r\n    return (\r\n        <div className=\"w-full\">\r\n            <div className=\"flex items-center\">\r\n                <p className=\"p-2 w-full\">{word}</p>\r\n                <span className=\"cursor-pointer mx-2\" onClick={remove}>\r\n                    <BiTrashAlt size={20}/>\r\n                </span>\r\n            </div>\r\n            <div className=\"h-px bg-dark dark:bg-light w-full\"></div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default function WordsList({ words, removeWord }: WordsListProps): React.ReactElement{\r\n    return (\r\n        <div className=\"w-full\">\r\n            {words.slice(0).reverse().map((word, index) => \r\n                <WordLine key={index} word={word} remove={() => removeWord(word)} />\r\n            )}\r\n        </div>\r\n    )\r\n};","import AddWordsPage from \"./AddWordsPage\";\r\n\r\nexport default AddWordsPage;","import React, { useEffect, useState } from 'react';\r\n\r\nimport AddWordsBar from './AddWordsBar';\r\nimport SaveButton from './SaveButton';\r\nimport AddWordsList from './WordsList';\r\nimport Loader from '../Loader';\r\n\r\nimport { apiEndpoint } from '../../app.config';\r\nimport { addWords, AddWordsRequestState } from '../../models';\r\n\r\ntype AddWordsPageProps = {\r\n    userId: number | null\r\n};\r\n\r\nconst getWordsFromSessionStorage = (): string[] => {\r\n    const storedWords: string | null = sessionStorage.getItem(\"words\");\r\n    if (storedWords) return JSON.parse(storedWords)\r\n    else return []\r\n};\r\n\r\nexport default function AddWordsPage ({ userId }: AddWordsPageProps): React.ReactElement {\r\n    const [words, setWords] = useState<string[]>(getWordsFromSessionStorage());\r\n    const [requestState, setRequestState] = useState<AddWordsRequestState>(AddWordsRequestState.NotStarted);\r\n    const addWord = (word: string): void => {if (!words.includes(word)) setWords([...words, word])};\r\n    const removeWord = (word: string): void => setWords(words.filter(item => item !== word));\r\n    const saveWords = (): void => {\r\n        if (words.length === 0){\r\n            window.alert(\"Try adding some words before saving!\");\r\n            return \r\n        }\r\n        addWords(userId, words, setRequestState, apiEndpoint)\r\n        setWords([]);\r\n    };\r\n\r\n    useEffect(() => sessionStorage.setItem(\"words\", JSON.stringify(words)), [words]);\r\n\r\n    useEffect(() => {\r\n        switch (requestState){\r\n            case AddWordsRequestState.BackendIssue:{\r\n                window.alert(\"Looks like our servers are down. Try again in a few minutes...\");\r\n                break;\r\n            }\r\n            case AddWordsRequestState.UserNotFound:{\r\n                window.alert(\"You've been disconnected, please login.\");\r\n                sessionStorage.removeItem(\"token\");\r\n                window.location.reload();\r\n                break;\r\n            }\r\n            case AddWordsRequestState.Successful:{\r\n                window.alert(\"Words added successfully! You can now keep playing!\");\r\n                break;\r\n            }\r\n            default: break;\r\n        }\r\n    }, [requestState]);\r\n\r\n    return (\r\n        <div className='flex flex-col items-start min-h-screen'>\r\n            <h1 className='page-title'>New vocabulary</h1>\r\n            <div className=\"h-bar mb-6\"></div>\r\n            <AddWordsBar addWord={addWord}/>\r\n            <AddWordsList words={words} removeWord={removeWord}/>\r\n\r\n            <div className=\"bottom-float\">\r\n                {\r\n                    requestState === AddWordsRequestState.Waiting ? <Loader /> :\r\n                    <SaveButton saveWords={saveWords} />\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import {BiTrashAlt} from 'react-icons/bi';\r\n\r\ntype ShowTargetWordProps = {\r\n    word: string,\r\n    deleteWord: () => void\r\n};\r\n\r\nexport default function ShowTargetWord ({ word, deleteWord }: ShowTargetWordProps): React.ReactElement {\r\n   return (\r\n        <div className=\"mt-12 mb-4 flex items-center justify-between\">\r\n            <h2 className=\" text-md\">{word}</h2>\r\n            <span className=\"cursor-pointer mx-2\" onClick={deleteWord}>\r\n                <BiTrashAlt size={20}/>\r\n            </span>\r\n        </div>\r\n    )\r\n};","import { useEffect, useState } from \"react\";\r\n\r\nimport { apiEndpoint } from \"../../app.config\";\r\nimport { getScore, GetScoreRequestState } from \"../../models\";\r\nimport Loader from \"../Loader\";\r\n\r\ntype TranslateFieldProps = {\r\n    setScore: (score: number) => void,\r\n    wordId: number,\r\n    wordIndex: number\r\n};\r\n\r\nexport default function TranslateField ({ setScore, wordId, wordIndex}: TranslateFieldProps): React.ReactElement {\r\n    const [translatedWord, setTranslatedWord] = useState<string>(\"\");\r\n    const [requestState, setRequestState] = useState<GetScoreRequestState>(GetScoreRequestState.NotStarted);\r\n    const changeTranslatedWord = (event: any): void => setTranslatedWord(event.target.value);\r\n    const submitWord = (event: any): void => {\r\n        event.preventDefault();\r\n        setTranslatedWord(\"\");\r\n        getScore(wordId, translatedWord, setScore, setRequestState, apiEndpoint)\r\n    };  \r\n    useEffect(() => {\r\n        const inputElement: any = document.querySelector(\"#translate-word-input\");\r\n        inputElement.value = \"\";\r\n    },[wordIndex])\r\n\r\n    // Error handling with the screen alerts\r\n    useEffect(() => {\r\n        switch(requestState){\r\n            case GetScoreRequestState.BackendIssue: {\r\n                window.alert(\"Looks like our servers are down. Come back in a few minutes...\");\r\n                break;\r\n            }\r\n            case GetScoreRequestState.UserNotFound: {\r\n                window.alert(\"You've been disconnected, please login.\");\r\n                sessionStorage.removeItem(\"token\");\r\n                window.location.reload();\r\n                break;\r\n            }\r\n            case GetScoreRequestState.TranslationError: {\r\n                window.alert(\"Looks like google cannot translate that... Try something else.\");\r\n                break;\r\n            }\r\n            case GetScoreRequestState.NlpError: {\r\n                window.alert(\"Sorry, our Machine Learning model just crashed. Thank you for comming back in a few minutes.\");\r\n                break;\r\n            }\r\n            default: break;\r\n        }\r\n    })\r\n\r\n    return (\r\n        <div className=\"w-full\">\r\n            <form autoComplete=\"off\" className=\"flex justify-between items-center\">\r\n                <input onChange={changeTranslatedWord} type=\"text\" id=\"translate-word-input\" placeholder=\"Translation\" className=\"input-field w-full mr-4\"/>\r\n                <button onClick={submitWord} className=\"rounded-button px-3\">{!translatedWord ? \"?\" : \">\"}</button>\r\n            </form>\r\n            {\r\n                requestState === GetScoreRequestState.Waiting? <Loader /> : <></>\r\n            }\r\n        </div>\r\n    )\r\n};\r\n","type ScoreProps = {\r\n    score: number | null\r\n};\r\n\r\nexport default function Score ({ score }: ScoreProps): React.ReactElement {\r\n    return (\r\n        <div className=\"text-2xl\">\r\n            {\r\n            score === null ?\r\n            <></> :\r\n            <p className={\r\n                    // more cathegories can be added for a smother UX\r\n                    score < 0.33 ?\r\n                    \"text-red\" :\r\n                    score < 0.66 ?\r\n                    \"text-yellow-400\" :\r\n                    score < 1 ?\r\n                    \"text-green-600\":\r\n                    \"\"\r\n                }>{(score*100).toFixed(2)}%</p>\r\n            }\r\n        </div>\r\n    )\r\n};","import { CgArrowLongRight } from 'react-icons/cg';\r\n\r\ntype NextButtonProps = {\r\n    nextWord: () => void,\r\n    show: boolean\r\n};\r\n\r\nexport default function NextButton ({ nextWord, show }: NextButtonProps): React.ReactElement {\r\n    return (\r\n        show ?\r\n        <button onClick={nextWord} className=\"secondary-rounded-button w-max px-2\">\r\n            <CgArrowLongRight size={20}/>\r\n        </button> :\r\n        <></>\r\n    )\r\n};","type LoadMoreProps = {\r\n    loadMoreWords: () => void\r\n}\r\n\r\nexport default function LoadMore({ loadMoreWords }: LoadMoreProps): React.ReactElement {\r\n    return(\r\n        <div className=\"w-full my-10\">\r\n            <p>Congrats! You've trainned all your vocabulary!</p>\r\n            <button onClick={loadMoreWords} className=\"secondary-button\">Load more</button>\r\n        </div>\r\n    )\r\n};","type ReloadWordsPropsType = {\r\n    reloadWords: () => void;\r\n};\r\n\r\nexport default function ReloadWords ({reloadWords}: ReloadWordsPropsType): React.ReactElement {\r\n    return(\r\n        <div className=\"bottom-float\">\r\n            <button className=\"secondary-button px-10\" onClick={reloadWords}>Refresh words</button>\r\n        </div>\r\n    )\r\n}","import React, { useEffect, useState } from \"react\";\r\nimport ShowTargetWord from \"./ShowTargetWord\";\r\nimport TranslateField from \"./TranslateField\";\r\nimport Score from \"./Score\";\r\nimport NextButton from \"./NextButton\";\r\nimport LoadMore from \"./LoadMore\";\r\n\r\nimport { apiEndpoint } from '../../app.config';\r\nimport { getWords, GetWordsRequestState, Word, deleteWord, DeleteWordRequestState } from \"../../models\";\r\nimport ReloadWords from \"./ReloadWords\";\r\n\r\ntype PlayPageProps = {\r\n    userId: number | null\r\n};\r\n\r\nconst setWordsListInSessionStorage = (wordsList: Word[]): void => sessionStorage.setItem(\"wordList\", JSON.stringify(wordsList));\r\nconst readWordsListFromSessionStorage = (): Word[] => {\r\n    const wordListString: string | null = sessionStorage.getItem(\"wordList\");\r\n    if(wordListString === null || wordListString === \"[]\") return [{word: \"\", id: 0}];\r\n    return JSON.parse(wordListString);\r\n};\r\n\r\nconst setWordIndexInSessionStorage = (wordIndex: number) => sessionStorage.setItem(\"wordIndex\", JSON.stringify(wordIndex));\r\nconst readWordIndexFromSessionStorage = (): number => {\r\n    const wordIndex: string | null = sessionStorage.getItem(\"wordIndex\");\r\n    if(wordIndex === null) return 0;\r\n    return JSON.parse(wordIndex);\r\n};\r\n\r\n\r\n\r\n// need to create a focus system to facilitate keyboard navigating when playing\r\nexport default function PlayPage ({ userId }: PlayPageProps): React.ReactElement {\r\n    const [wordsList, setWordsList] = useState<Word[]>(readWordsListFromSessionStorage());\r\n    const [targetWordIndex, setTargetWordIndex] = useState<number>(readWordIndexFromSessionStorage());\r\n    const [targetWord, setTargetWord] = useState<Word>(wordsList[targetWordIndex]);\r\n    const [score, setScore] = useState<number | null>(null);\r\n    const [finished, setFinished] = useState<boolean>(false);\r\n    const [getWordsRequestState, setGetWordsRequestState] = useState<GetWordsRequestState>(GetWordsRequestState.NotStarted);\r\n    const [deleteWordRequestState, setDeleteWordsRequestState] = useState<DeleteWordRequestState>(DeleteWordRequestState.NotStarted);\r\n    const nextWord = (): void => {\r\n        setScore(null);\r\n        if (targetWordIndex >= wordsList.length - 1) {\r\n            setTargetWordIndex(0);\r\n            return setFinished(true);\r\n        }\r\n        setTargetWordIndex(targetWordIndex + 1);\r\n    }\r\n\r\n    const loadWords = (): void => {\r\n        getWords(userId, setWordsList, setGetWordsRequestState, apiEndpoint);\r\n        setFinished(false);\r\n        setTargetWordIndex(0);\r\n    };\r\n\r\n    const deleteCurrentWord = (): void => {\r\n        deleteWord( targetWord.id, setDeleteWordsRequestState, apiEndpoint);\r\n    };\r\n\r\n    useEffect(() => {if (JSON.stringify(wordsList) === JSON.stringify([{word: \"\", id: 0}])) loadWords();}, []);\r\n    useEffect(() => setTargetWord(wordsList[targetWordIndex]), [targetWordIndex, wordsList]);\r\n\r\n    useEffect(() => setWordIndexInSessionStorage(targetWordIndex), [targetWordIndex])\r\n    useEffect(() => setWordsListInSessionStorage(wordsList), [wordsList])\r\n\r\n    useEffect(() => {\r\n        switch (getWordsRequestState){\r\n            case GetWordsRequestState.BackendIssue:{\r\n                window.alert(\"Looks like our servers are down. Try again in a few minutes...\");\r\n                setWordsListInSessionStorage([]);\r\n                break;\r\n            }\r\n            case GetWordsRequestState.UserNotFound:{\r\n                window.alert(\"You've been disconnected, please login.\");\r\n                setWordsListInSessionStorage([]);\r\n                sessionStorage.removeItem(\"token\");\r\n                window.location.reload();\r\n                break;\r\n            }\r\n            default: break;\r\n        }\r\n    }, [getWordsRequestState]);\r\n\r\n    useEffect(() => {\r\n        switch (deleteWordRequestState){\r\n            case DeleteWordRequestState.BackendIssue:{\r\n                window.alert(\"Looks like our servers are down. Try again in a few minutes ...\");\r\n                break;\r\n            }\r\n            case DeleteWordRequestState.WordNotFound:{\r\n                window.alert(\"This word is no longer active in your account.\");\r\n                window.location.reload();\r\n                break;\r\n            }\r\n            case DeleteWordRequestState.Successful:{\r\n                window.alert(\"Word deleted successfully!\");\r\n                loadWords();\r\n                break;\r\n            }\r\n            default: break;\r\n        }\r\n    }, [deleteWordRequestState]);\r\n\r\n    return (\r\n        <div className=\"my-6\">\r\n            <h1 className=\"page-title \">Play</h1>\r\n            <div className=\"h-bar\"></div>\r\n            {\r\n                finished ? <LoadMore loadMoreWords={loadWords} />:\r\n                getWordsRequestState === GetWordsRequestState.BackendIssue? \r\n                <button onClick={() => window.location.reload()} className=\"secondary-button \">Reload page.</button> :\r\n                <>\r\n                    <ShowTargetWord word={targetWord.word} deleteWord={deleteCurrentWord} />\r\n                    <TranslateField setScore={setScore} wordId={targetWord.id} wordIndex={targetWordIndex} />\r\n                    <div className=\"w-full flex justify-around items-center my-6\">\r\n                        <Score score={score} />\r\n                        <NextButton nextWord={nextWord} show={score !== null}/>\r\n                    </div>\r\n                </>\r\n            }\r\n            <ReloadWords reloadWords={loadWords}/>\r\n        </div>\r\n    )\r\n}","import PlayPage from \"./PlayPage\";\r\n\r\nexport default PlayPage;","import React from 'react';\r\n\r\nenum ThemeOptions {\r\n    dark,\r\n    light,\r\n    systemDefault\r\n};\r\n\r\nfunction updateTheme(theme: ThemeOptions): void {\r\n    console.log('updating theme to ', theme)\r\n    console.log(theme.valueOf() == ThemeOptions.dark.valueOf());\r\n    if(theme.valueOf() == ThemeOptions.dark.valueOf()) localStorage.theme = 'dark';\r\n    else if(theme.valueOf() == ThemeOptions.light.valueOf()) localStorage.theme = 'light';\r\n    else localStorage.removeItem('theme');\r\n    window.location.reload();\r\n};\r\n\r\nfunction getDefaultValue(): ThemeOptions {\r\n    if (localStorage.theme === 'dark') return ThemeOptions.dark;\r\n    else if (localStorage.theme === 'light') return ThemeOptions.light;\r\n    else return ThemeOptions.systemDefault;\r\n};\r\n\r\nexport default function DarkModeConfig (): React.ReactElement {\r\n    const change = (event: any): void => updateTheme(event.target.value);\r\n    return(\r\n        <div className=\"flex justify-between items-center my-4 text-dark dark:text-light\">\r\n            <p className=\"\">Theme:</p>\r\n            <form action=\"\">\r\n                <select name=\"\" id=\"\" defaultValue={getDefaultValue()} onChange={change} className='text-sm bg-light dark:bg-dark'>\r\n                    <option value={ThemeOptions.dark}>Dark</option>\r\n                    <option value={ThemeOptions.light}>Light</option>\r\n                    <option value={ThemeOptions.systemDefault}>System default</option>\r\n                </select>\r\n            </form>\r\n        </div>\r\n    )\r\n};","import { Link } from 'react-router-dom';\r\n\r\nexport default function NotFoundPage (): React.ReactElement {\r\n    return (\r\n        <div className={`flex flex-col justify-around items-start my-10 text-dark dark:text-light`}>\r\n            <h1 className='my-4'>404 Error</h1>           \r\n            <h2 className='my-4'>This page cannot be found ...</h2>\r\n            <p className='my-4'>Go back to our user page <span className='underline'> <Link to = '/'>here.</Link></span></p>\r\n        </div>\r\n    )\r\n};","import ConfigPage from \"./ConfigPage\";\r\nexport default ConfigPage;","import DarkModeConfig from \"./DarkModeConfig\";\r\n\r\nexport default function ConfigPage () {\r\n    return(\r\n        <div className=\"\">\r\n            <h1 className=\"page-title \">Configurations</h1>\r\n            <div className=\"h-bar\"></div>\r\n            <DarkModeConfig />\r\n        </div>\r\n    )\r\n}","import { useState } from \"react\";\r\nimport { BsPencil, BsSave } from \"react-icons/bs\";\r\n\r\ntype EditableLineProps = {\r\n    apiKey: string,\r\n    label: string,\r\n    placeholder: string,\r\n    inputType: string,\r\n    changeFunction: (key: string, value: string) => void\r\n};\r\n\r\nconst validateEmail = (email: string): boolean => {\r\n    return String(email)\r\n        .toLowerCase()\r\n        .match(/^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/) !== null;\r\n};\r\n\r\nexport default function EditableLine ({ apiKey, label, placeholder, inputType, changeFunction }: EditableLineProps): React.ReactElement {\r\n    const [enableEdit, setEnableEdit] = useState<boolean>(false);\r\n    const [field, setField] = useState<string>(\"\");\r\n    const onChangeField = (event: any): void => setField(event.target.value);\r\n    const editFunction = (event: any): void => {\r\n        event.preventDefault();\r\n        setEnableEdit(true);\r\n    };\r\n    const saveFunction = (event: any): void => {\r\n        event.preventDefault();\r\n        if(inputType === \"email\" && !validateEmail(field)){\r\n            window.alert(\"Please input a valid email.\");\r\n            return\r\n        }\r\n        setEnableEdit(false);\r\n        changeFunction(apiKey, field);\r\n    };\r\n\r\n    return (\r\n        <form className=\"my-8 w-full\">\r\n            <span className=\"flex w-full justify-between items-center\">\r\n                <p className=\"my-2\">{label}</p>\r\n                {\r\n                    enableEdit ? \r\n                    <button onClick={saveFunction} className=\"cursor-pointer\"><BsSave/></button> :\r\n                    <button onClick={editFunction} className=\"cursor-pointer\"><BsPencil/></button>\r\n                }\r\n            </span>\r\n            <input onChange={onChangeField} className=\"border border-blue rounded-md bg-transparent w-full px-4 py-1\" type={inputType} disabled={!enableEdit} placeholder={placeholder} />\r\n        </form>\r\n\r\n    )\r\n};","type EditableImageProps= {\r\n    apiKey: string,\r\n    placeholder: string,\r\n    changeFunction: (key: string, value: string) => void\r\n};\r\n\r\nexport default function EditableImage ({ apiKey, placeholder, changeFunction }: EditableImageProps): React.ReactElement {\r\n    return (\r\n        <div className=\"w-full flex justify-center items-end\">\r\n            <div className=\"h-32 w-32 rounded-full overflow-hidden flex justify-center items-center bg-light border border-blue\">\r\n                <img src={placeholder} alt={apiKey} className=\"object-cover min-h-full min-w-full \"/>\r\n            </div>\r\n        </div>\r\n    )\r\n};","export default function Disconnect (): React.ReactElement {\r\n    const disconnect = (): void => {\r\n        sessionStorage.clear();\r\n        window.location.reload();\r\n    };\r\n    return <button onClick={disconnect} className=\"secondary-button border-red text-red w-full my-10\">Disconnect.</button>\r\n};","import UserPage from \"./UserPage\";\r\nexport default UserPage;","import { useState, useEffect } from \"react\";\r\n\r\nimport EditableLine from \"./EditableLine\";\r\nimport EditableImage from \"./EditableImage\";\r\nimport Disconnect from \"./Disconnect\";\r\n\r\nimport { apiEndpoint } from \"../../app.config\";\r\n\r\nimport { getUser, updateUser, GetUserRequestState, UpdateUserRequestState } from \"../../models\";\r\n\r\ntype UserPageProps = {\r\n    userId: number | null\r\n};\r\n\r\ntype User = {\r\n    email: string,\r\n    name: string,\r\n    photo: string\r\n}\r\n\r\n// for now user cannot eddit their photos for i dont know how to do that and I dont care for the moment.\r\nexport default function UserPage ({ userId }:UserPageProps): React.ReactElement {\r\n    const [user, setUser] = useState<User>({email: \"\", name: \"\", photo: \"\"});\r\n\r\n    const [getUserRequestState, setGetUserRequestState] = useState<GetUserRequestState>(GetUserRequestState.NotStarted);\r\n    const [updateUserRequestState, setUpdateUserRequestState] = useState<UpdateUserRequestState>(UpdateUserRequestState.NotStarted);\r\n    const updateUserData = (key: string, value: string ): void => updateUser(userId, key, value, setUpdateUserRequestState, apiEndpoint);\r\n\r\n    useEffect(() => getUser(userId, setUser, setGetUserRequestState, apiEndpoint), []);\r\n    useEffect(() => {\r\n        switch(getUserRequestState){\r\n            case GetUserRequestState.BackendIssue: {\r\n                window.alert(\"Looks like our servers are down. Try again in a couple of minutes!\");\r\n                break;\r\n            }\r\n            case GetUserRequestState.UserNotFound: {\r\n                window.alert(\"You've been disconnected, please login.\");\r\n                sessionStorage.removeItem(\"token\");\r\n                window.location.reload();\r\n                break;\r\n            }\r\n            default: break;\r\n        }\r\n    }, [getUserRequestState]);\r\n    useEffect(() => {\r\n        switch(updateUserRequestState){\r\n            case UpdateUserRequestState.Successful: {\r\n                window.alert(\"Information updated successfully.\");\r\n                break;\r\n            }\r\n            case UpdateUserRequestState.BackendIssue: {\r\n                window.alert(\"Looks like our servers are down. Try again in a couple of minutes!\");\r\n                break;\r\n            }\r\n            case UpdateUserRequestState.UserNotFound: {\r\n                window.alert(\"You've been disconnected, please login.\");\r\n                sessionStorage.removeItem(\"token\");\r\n                window.location.reload();\r\n                break;\r\n            }\r\n            default: break;\r\n        }\r\n    }, [updateUserRequestState]);\r\n\r\n    return (\r\n        <div className=\"w-full\">\r\n            <h1 className=\"page-title\">User page</h1>\r\n            <div className=\"h-bar mb-10\"></div>\r\n            <EditableImage apiKey=\"user_profile\" placeholder={user.photo} changeFunction={updateUserData} />\r\n            <EditableLine apiKey=\"user_name\" label=\"Name\" placeholder={user.name} inputType=\"text\" changeFunction={updateUserData}/>\r\n            <EditableLine apiKey=\"user_email\" label=\"E-mail\" placeholder={user.email} inputType=\"email\" changeFunction={updateUserData}/>\r\n            <Disconnect />\r\n        </div>\r\n    )\r\n};","export default function ExplanatoryText ():React.ReactElement {\r\n    return (\r\n        <div className=\"w-full my-10\">\r\n            <h2 className=\"my-6 text-2xl\">What is Voca?</h2>\r\n            <div className=\" text-justify\">\r\n                <p className=\"my-4\">Voca is a language learning app that uses top of the line Machine Learning language processing to provide you with the best learning experience.</p>\r\n                <p className=\"my-4\">Its purpose is to help you learn systematically new vocabulary. So, all those lists of vocabulary that you have in your notebook from when you studied French or Spanish have now a purpose! You will be able to play guessing words to train yourself and achieve mastery in the desired language!</p>\r\n                <p className=\"my-4\">It was developed by a small team of software devs (in this case, only me, Guile) in the start of 2022. So, we are always open to suggestions, help and feedback from our users!</p>\r\n            </div>\r\n            <div className=\"py-4 text-sm text-gray-400\">\r\n                <p className=\"\">All rights reserved ©</p>\r\n                <p className=\"\">Guile Vieira - 2022</p>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}","import { useState } from 'react';\r\nimport {BiDownArrow} from 'react-icons/bi';\r\n\r\nexport default function Tutorial (): React.ReactElement {\r\n    const [expand, setExpand] = useState<boolean>(false);\r\n    const toggleExpand = (): void => setExpand(!expand)\r\n    return (\r\n        <div className=\"w-full mt-10\">\r\n            <h2 className=\"py-6 text-2xl\">Not sure how to get started?</h2>\r\n            <p onClick={toggleExpand} className='flex flex-row w-full justify-around items-center secondary-button my-6 text-dark dark:text-light '>Check out the tutorial! <span  className={expand ? \"transform rotate-180\" : \"\"}><BiDownArrow /></span></p>\r\n            {\r\n                !expand ? <></> :\r\n                <div className=\"w-full text-justify\">\r\n                    <p className='py-2'>After signing up to Voca and logging in (both of which you've already done!) you need to add words to your personal list. You can access that page by the plus sign (+) button in the bottom of the page. There you input all the new vocabulary you want to train, in the language that you want to learn. The best moments to do that is during a class, or when you're reading a text. After, just hit save and all will be recorded in our databases!</p>\r\n                    <p className='py-2'>After you added words in your list you'll be able to play with them! Just go to the play page (in the play-like button in the bottom of the page) and well ... play! It goes like this: for each word that appears you should give your translation (it can be in your mother tongue, in English, or any other language in which you can remember the translation. After that, our Machine Learning algorithm will kick in to determine how close to the answer you were. The words that you know less will appear more often, and the ones you know better will appear less often.</p>\r\n                    <p className=\"py-2\">If you want to see of modify anything in your profile, just go to the home button in the bottom. The same if you want to change any configurations of the app (like switching between light and dark mode), just go to the settings page in the bottom right.</p>\r\n                    <p className='py-2'>And ... thats it! This tutorial will be here if you need it! Good learning!</p>\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n};","export default function Feedback (): React.ReactElement {\r\n    return(\r\n        <div className=\"w-full py-10 text-justify\">\r\n            <h2 className=\"text-2xl py-6 \">Found any bugs?</h2>\r\n            <p className=\"py-2\">Since we are a small team of developers, its hard to spot out all the bugs right away.</p>\r\n            <p className=\"py-2\">So your contribution will be very (very!) welcome!</p>\r\n            <p className=\"py-2\">Contact me by <a href=\"mailto:guilhermevmanhaes@gmail.com\">mail</a>, by making a pull request in the <a href=\"https://github.com/guilevieiram/voca\">GitHub</a> repository, or by accessing my website <a href=\"https://guile.ga\">guile.ga</a> where you can find all my contact information.</p>\r\n\r\n        </div>\r\n    )\r\n};","import {Link} from 'react-router-dom';\r\n\r\ntype GoToLoginProps = {\r\n\r\n};\r\n\r\nexport default function GoToLogin (): React.ReactElement {\r\n    return (\r\n        <div className=\"py-6\">\r\n            <p>Already have an account?</p>\r\n            <Link to=\"/login\" className='no-underline hover:no-underline'>\r\n                <div className=\"primary-button flex justify-center items-center\">\r\n                        Log in\r\n                </div>\r\n            </Link>\r\n        </div>\r\n    )\r\n}","export default __webpack_public_path__ + \"static/media/voca-logo-light.f0648180.svg\";","export default __webpack_public_path__ + \"static/media/voca-logo-dark.dea68b02.svg\";","import HomePage from \"./HomePage\";\r\nexport default HomePage;","import ExplanatoryText from \"./ExplanatoryText\"\r\nimport Tutorial from \"./Tutorial\"\r\nimport Feedback from \"./Feedback\"\r\nimport GoToLogin from \"./GoToLogin\";\r\n\r\nimport vocaLogoLight from '../../assets/voca-logo-light.svg';\r\nimport vocaLogoDark from '../../assets/voca-logo-dark.svg';\r\n\r\nconst getLogo = (): string => {\r\n    if(localStorage.theme === \"light\") return vocaLogoLight\r\n    else return vocaLogoDark;\r\n}\r\n\r\nexport default function HomePage (): React.ReactElement {\r\n    return (\r\n        <div className=\"w-full my-10 mb-40\">\r\n            <img src={getLogo()} alt=\"\" className=\"mx-auto my-10 h-24 \"/>\r\n            <ExplanatoryText/>\r\n            <GoToLogin />\r\n            \r\n            <Tutorial />\r\n            <Feedback />\r\n        </div>\r\n    )\r\n};","import React, { useEffect, useState } from \"react\";\nimport Background from \"./components/Background\";\nimport Nav from \"./components/Nav\";\nimport UserLogin from \"./components/user_login\";\nimport UserSignup from \"./components/user_signup\";\nimport AddWordsPage from \"./components/add_words\";\nimport PlayPage from \"./components/play_page\";\nimport NotFoundPage from \"./components/NotFoundPage\";\nimport ConfigPage from \"./components/config_page\";\nimport UserPage from \"./components/user_page\";\nimport HomePage from \"./components/home_page\";\n\nimport { loadTheme } from \"./models\";\n\nimport {\n  HashRouter as Router,\n  Route,\n  Routes,\n  Navigate\n} from 'react-router-dom';\n\nimport { wakeBackend } from \"./models\";\nimport { apiEndpoint } from \"./app.config\";\n\nfunction App(): React.ReactElement {\n\n\n  const setToken = (userToken: string): void => sessionStorage.setItem('token', userToken);\n  const getToken = (): string | null => sessionStorage.getItem('token');\n  const token: string | null = getToken();\n  const ifLoggedIn = (element: React.ReactElement): React.ReactElement => token ? element : <Navigate replace to=\"/login\" />;\n  const ifNotLoggedIn = (element: React.ReactElement): React.ReactElement => !token ? element : <Navigate replace to=\"/home\" />;\n\n  const [userId, setUserId] = useState<number | null>(null);\n  useEffect(() => {\n    if (token === null) setUserId(null);\n    else setUserId(parseInt(token));\n  }, [token]);\n  \n\n  useEffect(() => {\n    wakeBackend(apiEndpoint);\n    loadTheme();\n  }, [])\n\n  return (\n    <div className={`flex justify-center`}>\n      <div className=\"max-w-xl w-full px-8 \">\n        <Router>\n          <Routes>\n            <Route path='/' element={ifLoggedIn(<HomePage />)}/>\n            <Route path='/home' element={<HomePage />}/>\n            <Route path=\"/login\" element={ifNotLoggedIn(<UserLogin setToken={setToken}/>)}/>\n            <Route path=\"/signup\" element={ifNotLoggedIn(<UserSignup />)}/>\n            <Route path=\"/add_words\" element={ifLoggedIn(<AddWordsPage userId={userId}/>)} />\n            <Route path=\"/play\" element={ifLoggedIn(<PlayPage userId={userId}/>)} />\n            <Route path=\"/user_page\" element={ifLoggedIn(<UserPage userId={userId} />)}/>\n            <Route path=\"/config\" element={<ConfigPage />} />\n            <Route path='*' element={<NotFoundPage />}/>\n          </Routes>\n\n          <Background />\n          <Nav />\n\n        </Router>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","export default function loadTheme(): void {\r\n    if (localStorage.theme === 'dark' || (!('theme' in localStorage) && window.matchMedia('(prefers-color-scheme: dark)').matches)) {\r\n      document.documentElement.classList.add('dark');\r\n    } else {\r\n      document.documentElement.classList.remove('dark');\r\n    };\r\n};","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","module.exports = {\r\n    // apiEndpoint: \"http://127.0.0.1:5000/\"\r\n    apiEndpoint: \"https://voca-backend.herokuapp.com/\"\r\n}\r\n"],"sourceRoot":""}